{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\angie\\\\Downloads\\\\Universidad\\\\prog 3\\\\matchingApp\\\\app\\\\screens\\\\security\\\\SessionNavbar.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Appbar } from 'react-native-paper';\n\nvar SessionNavbar = function (_React$Component) {\n  _inherits(SessionNavbar, _React$Component);\n\n  var _super = _createSuper(SessionNavbar);\n\n  function SessionNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, SessionNavbar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoggedIn: false,\n      name: \"\"\n    };\n\n    _this.signOut = function () {\n      Alert.alert(\"Cerrar sesión.\", \"¿Deseas cerrar la sesión?\", [{\n        text: \"Sí.\",\n        onPress: function onPress() {\n          AsyncStorage.removeItem(\"session\");\n\n          _this.props.navigation.push(\"Matchiing\");\n\n          _this.setState({\n            isLoggedIn: false,\n            name: \"\"\n          });\n        }\n      }, {\n        text: \"No.\"\n      }]);\n    };\n\n    return _this;\n  }\n\n  _createClass(SessionNavbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var session;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"session\"));\n\n            case 2:\n              session = _context.sent;\n\n              if (session) {\n                this.setState({\n                  isLoggedIn: true,\n                  name: JSON.parse(session).data.correo\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoggedIn) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }\n        }, React.createElement(Appbar.Header, {\n          style: {\n            backgroundColor: '#510964',\n            height: 60\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        }, React.createElement(Appbar.Content, {\n          title: \"Matching\",\n          subtitle: \"Bienvenido, \" + this.state.name + \"!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }), React.createElement(Appbar.Action, {\n          icon: \"heart-outline\",\n          onPress: function onPress() {\n            return _this2.props.navigation.push(\"Matching\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }\n        }), React.createElement(Appbar.Action, {\n          icon: \"text\",\n          onPress: function onPress() {\n            return _this2.props.navigation.push(\"Publicaciones\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }), React.createElement(Appbar.Action, {\n          icon: \"message-outline\",\n          onPress: function onPress() {\n            return _this2.props.navigation.push(\"Mensajes\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }), React.createElement(Appbar.Action, {\n          icon: \"logout\",\n          onPress: this.signOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: styles.sesionView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        }, React.createElement(Appbar.Header, {\n          style: {\n            backgroundColor: '#510964',\n            height: 60\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }\n        }, React.createElement(Appbar.Content, {\n          title: \"Matching\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }), React.createElement(Appbar.Action, {\n          icon: \"login\",\n          onPress: function onPress() {\n            return _this2.props.navigation.push(\"Iniciar sesión\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        }), React.createElement(Appbar.Action, {\n          icon: \"book-open\",\n          onPress: function onPress() {\n            return _this2.props.navigation.push(\"Registrate\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return SessionNavbar;\n}(React.Component);\n\nexport { SessionNavbar as default };\nvar styles = StyleSheet.create({\n  buttonView: {\n    padding: 10\n  },\n  container: {\n    flex: 0.5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    alignContent: \"center\"\n  },\n  loginView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginBottom: 50,\n    zIndex: 1\n  },\n  sesion: {\n    fontWeight: \"100\",\n    fontSize: 17,\n    color: \"#F10085\"\n  },\n  sesionView: {\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\"\n  }\n});","map":{"version":3,"sources":["C:/Users/angie/Downloads/Universidad/prog 3/matchingApp/app/screens/security/SessionNavbar.tsx"],"names":["React","Appbar","SessionNavbar","props","state","isLoggedIn","name","signOut","Alert","alert","text","onPress","AsyncStorage","removeItem","navigation","push","setState","getItem","session","JSON","parse","data","correo","backgroundColor","height","styles","sesionView","Component","StyleSheet","create","buttonView","padding","container","flex","flexDirection","alignItems","alignContent","loginView","marginBottom","zIndex","sesion","fontWeight","fontSize","color"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { StyleSheet, Text, Alert, Button, AsyncStorage, VirtualizedList, View, Dimensions } from \"react-native\";\r\nimport{ Appbar} from 'react-native-paper';\r\n\r\nexport default class SessionNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    name: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let session = await AsyncStorage.getItem(\"session\");\r\n\r\n    if (session) {\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        name: JSON.parse(session).data.correo,\r\n      });\r\n    }\r\n  }\r\n\r\n  signOut = () => {\r\n    Alert.alert(\"Cerrar sesión.\", \"¿Deseas cerrar la sesión?\", [\r\n      {\r\n        text: \"Sí.\",\r\n        onPress: () => {\r\n          AsyncStorage.removeItem(\"session\");\r\n          this.props.navigation.push(\"Matchiing\");\r\n          this.setState({\r\n            isLoggedIn: false,\r\n            name: \"\",\r\n          });\r\n        },\r\n      },\r\n      {\r\n        text: \"No.\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoggedIn) {\r\n      return <View>\r\n        <Appbar.Header style={{backgroundColor:'#510964', height: 60}}>\r\n            <Appbar.Content title=\"Matching\" subtitle={`Bienvenido, ${this.state.name}!`} />\r\n            \r\n            <Appbar.Action icon=\"heart-outline\" onPress={() => this.props.navigation.push(\"Matching\")} />\r\n            <Appbar.Action icon=\"text\" onPress={() => this.props.navigation.push(\"Publicaciones\")} />\r\n            <Appbar.Action icon=\"message-outline\" onPress={() => this.props.navigation.push(\"Mensajes\")} />\r\n            <Appbar.Action icon=\"logout\" onPress={this.signOut } />\r\n          </Appbar.Header>\r\n          <View style={styles.sesionView}>\r\n          </View>\r\n          </View>\r\n    } else {\r\n      return (\r\n        <View>\r\n        <Appbar.Header style={{backgroundColor:'#510964', height: 60}}>\r\n            <Appbar.Content title=\"Matching\" />\r\n            <Appbar.Action icon=\"login\" onPress={() => this.props.navigation.push(\"Iniciar sesión\")} />\r\n            <Appbar.Action icon=\"book-open\" onPress={() => this.props.navigation.push(\"Registrate\")} />\r\n          </Appbar.Header>\r\n          </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n \r\n  buttonView: {\r\n    padding: 10,\r\n  },\r\n  container: {\r\n    flex:0.5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  loginView: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: 50,\r\n    zIndex: 1,\r\n  },\r\n  sesion:{\r\n    fontWeight : \"100\",\r\n        fontSize:17,\r\n        color:\"#F10085\",\r\n  },\r\n  sesionView: {\r\n    alignItems: \"flex-start\",\r\n    alignContent: \"flex-start\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}